#ifndef MONSTER_READER_H
#define MONSTER_READER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif


typedef const struct GasBoil_Message_table *GasBoil_Message_table_t;
typedef struct GasBoil_Message_table *GasBoil_Message_mutable_table_t;
typedef const flatbuffers_uoffset_t *GasBoil_Message_vec_t;
typedef flatbuffers_uoffset_t *GasBoil_Message_mutable_vec_t;
#ifndef GasBoil_Message_file_identifier
#define GasBoil_Message_file_identifier flatbuffers_identifier
#endif
/* deprecated, use GasBoil_Message_file_identifier */
#ifndef GasBoil_Message_identifier
#define GasBoil_Message_identifier flatbuffers_identifier
#endif
#define GasBoil_Message_type_hash ((flatbuffers_thash_t)0xf5655541)
#define GasBoil_Message_type_identifier "\x41\x55\x65\xf5"

typedef int8_t GasBoil_CommandType_enum_t;
__flatbuffers_define_integer_type(GasBoil_CommandType, GasBoil_CommandType_enum_t, 8)
#define GasBoil_CommandType_CommandType_Reset ((GasBoil_CommandType_enum_t)INT8_C(1))
#define GasBoil_CommandType_CommandType_Save ((GasBoil_CommandType_enum_t)INT8_C(2))
#define GasBoil_CommandType_CommandType_Factory ((GasBoil_CommandType_enum_t)INT8_C(3))
#define GasBoil_CommandType_CommandType_GetVersion ((GasBoil_CommandType_enum_t)INT8_C(4))
#define GasBoil_CommandType_CommandType_Trigger_GetSize ((GasBoil_CommandType_enum_t)INT8_C(5))
#define GasBoil_CommandType_CommandType_Trigger_GetCapacity ((GasBoil_CommandType_enum_t)INT8_C(6))
#define GasBoil_CommandType_CommandType_Trigger_Add ((GasBoil_CommandType_enum_t)INT8_C(7))
#define GasBoil_CommandType_CommandType_Trigger_Remove ((GasBoil_CommandType_enum_t)INT8_C(8))
#define GasBoil_CommandType_CommandType_Trigger_ClearAll ((GasBoil_CommandType_enum_t)INT8_C(9))
#define GasBoil_CommandType_CommandType_Trigger_Get ((GasBoil_CommandType_enum_t)INT8_C(10))
#define GasBoil_CommandType_CommandType_Trigger_Set ((GasBoil_CommandType_enum_t)INT8_C(11))
#define GasBoil_CommandType_CommandType_Action_GetSize ((GasBoil_CommandType_enum_t)INT8_C(12))
#define GasBoil_CommandType_CommandType_Action_GetCapacity ((GasBoil_CommandType_enum_t)INT8_C(13))
#define GasBoil_CommandType_CommandType_Action_Add ((GasBoil_CommandType_enum_t)INT8_C(14))
#define GasBoil_CommandType_CommandType_Action_Remove ((GasBoil_CommandType_enum_t)INT8_C(15))
#define GasBoil_CommandType_CommandType_Action_ClearAll ((GasBoil_CommandType_enum_t)INT8_C(16))
#define GasBoil_CommandType_CommandType_Action_Get ((GasBoil_CommandType_enum_t)INT8_C(17))
#define GasBoil_CommandType_CommandType_Action_Set ((GasBoil_CommandType_enum_t)INT8_C(18))
#define GasBoil_CommandType_CommandType_Encoder_GetSize ((GasBoil_CommandType_enum_t)INT8_C(19))
#define GasBoil_CommandType_CommandType_Encoder_GetCapacity ((GasBoil_CommandType_enum_t)INT8_C(20))
#define GasBoil_CommandType_CommandType_Encoder_Add ((GasBoil_CommandType_enum_t)INT8_C(21))
#define GasBoil_CommandType_CommandType_Encoder_Remove ((GasBoil_CommandType_enum_t)INT8_C(22))
#define GasBoil_CommandType_CommandType_Encoder_ClearAll ((GasBoil_CommandType_enum_t)INT8_C(23))
#define GasBoil_CommandType_CommandType_Encoder_Get ((GasBoil_CommandType_enum_t)INT8_C(24))
#define GasBoil_CommandType_CommandType_Encoder_Set ((GasBoil_CommandType_enum_t)INT8_C(25))

static inline const char *GasBoil_CommandType_name(GasBoil_CommandType_enum_t value)
{
    switch (value) {
    case GasBoil_CommandType_CommandType_Reset: return "CommandType_Reset";
    case GasBoil_CommandType_CommandType_Save: return "CommandType_Save";
    case GasBoil_CommandType_CommandType_Factory: return "CommandType_Factory";
    case GasBoil_CommandType_CommandType_GetVersion: return "CommandType_GetVersion";
    case GasBoil_CommandType_CommandType_Trigger_GetSize: return "CommandType_Trigger_GetSize";
    case GasBoil_CommandType_CommandType_Trigger_GetCapacity: return "CommandType_Trigger_GetCapacity";
    case GasBoil_CommandType_CommandType_Trigger_Add: return "CommandType_Trigger_Add";
    case GasBoil_CommandType_CommandType_Trigger_Remove: return "CommandType_Trigger_Remove";
    case GasBoil_CommandType_CommandType_Trigger_ClearAll: return "CommandType_Trigger_ClearAll";
    case GasBoil_CommandType_CommandType_Trigger_Get: return "CommandType_Trigger_Get";
    case GasBoil_CommandType_CommandType_Trigger_Set: return "CommandType_Trigger_Set";
    case GasBoil_CommandType_CommandType_Action_GetSize: return "CommandType_Action_GetSize";
    case GasBoil_CommandType_CommandType_Action_GetCapacity: return "CommandType_Action_GetCapacity";
    case GasBoil_CommandType_CommandType_Action_Add: return "CommandType_Action_Add";
    case GasBoil_CommandType_CommandType_Action_Remove: return "CommandType_Action_Remove";
    case GasBoil_CommandType_CommandType_Action_ClearAll: return "CommandType_Action_ClearAll";
    case GasBoil_CommandType_CommandType_Action_Get: return "CommandType_Action_Get";
    case GasBoil_CommandType_CommandType_Action_Set: return "CommandType_Action_Set";
    case GasBoil_CommandType_CommandType_Encoder_GetSize: return "CommandType_Encoder_GetSize";
    case GasBoil_CommandType_CommandType_Encoder_GetCapacity: return "CommandType_Encoder_GetCapacity";
    case GasBoil_CommandType_CommandType_Encoder_Add: return "CommandType_Encoder_Add";
    case GasBoil_CommandType_CommandType_Encoder_Remove: return "CommandType_Encoder_Remove";
    case GasBoil_CommandType_CommandType_Encoder_ClearAll: return "CommandType_Encoder_ClearAll";
    case GasBoil_CommandType_CommandType_Encoder_Get: return "CommandType_Encoder_Get";
    case GasBoil_CommandType_CommandType_Encoder_Set: return "CommandType_Encoder_Set";
    default: return "";
    }
}

static inline int GasBoil_CommandType_is_known_value(GasBoil_CommandType_enum_t value)
{
    switch (value) {
    case GasBoil_CommandType_CommandType_Reset: return 1;
    case GasBoil_CommandType_CommandType_Save: return 1;
    case GasBoil_CommandType_CommandType_Factory: return 1;
    case GasBoil_CommandType_CommandType_GetVersion: return 1;
    case GasBoil_CommandType_CommandType_Trigger_GetSize: return 1;
    case GasBoil_CommandType_CommandType_Trigger_GetCapacity: return 1;
    case GasBoil_CommandType_CommandType_Trigger_Add: return 1;
    case GasBoil_CommandType_CommandType_Trigger_Remove: return 1;
    case GasBoil_CommandType_CommandType_Trigger_ClearAll: return 1;
    case GasBoil_CommandType_CommandType_Trigger_Get: return 1;
    case GasBoil_CommandType_CommandType_Trigger_Set: return 1;
    case GasBoil_CommandType_CommandType_Action_GetSize: return 1;
    case GasBoil_CommandType_CommandType_Action_GetCapacity: return 1;
    case GasBoil_CommandType_CommandType_Action_Add: return 1;
    case GasBoil_CommandType_CommandType_Action_Remove: return 1;
    case GasBoil_CommandType_CommandType_Action_ClearAll: return 1;
    case GasBoil_CommandType_CommandType_Action_Get: return 1;
    case GasBoil_CommandType_CommandType_Action_Set: return 1;
    case GasBoil_CommandType_CommandType_Encoder_GetSize: return 1;
    case GasBoil_CommandType_CommandType_Encoder_GetCapacity: return 1;
    case GasBoil_CommandType_CommandType_Encoder_Add: return 1;
    case GasBoil_CommandType_CommandType_Encoder_Remove: return 1;
    case GasBoil_CommandType_CommandType_Encoder_ClearAll: return 1;
    case GasBoil_CommandType_CommandType_Encoder_Get: return 1;
    case GasBoil_CommandType_CommandType_Encoder_Set: return 1;
    default: return 0;
    }
}



struct GasBoil_Message_table { uint8_t unused__; };

static inline size_t GasBoil_Message_vec_len(GasBoil_Message_vec_t vec)
__flatbuffers_vec_len(vec)
static inline GasBoil_Message_table_t GasBoil_Message_vec_at(GasBoil_Message_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(GasBoil_Message_table_t, vec, i, 0)
__flatbuffers_table_as_root(GasBoil_Message)

__flatbuffers_define_scalar_field(0, GasBoil_Message, type, GasBoil_CommandType, GasBoil_CommandType_enum_t, INT8_C(5))
__flatbuffers_define_scalar_field(1, GasBoil_Message, ack, flatbuffers_int16, int16_t, INT16_C(0))
__flatbuffers_define_scalar_field(2, GasBoil_Message, dataSize, flatbuffers_int16, int16_t, INT16_C(0))
__flatbuffers_define_vector_field(3, GasBoil_Message, data, flatbuffers_int8_vec_t, 0)


#include "flatcc/flatcc_epilogue.h"
#endif /* MONSTER_READER_H */
